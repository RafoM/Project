{"version":3,"sources":["firebase.js","components/HOC/TeacherLayout.js","components/Teacher/TeacherComponent.js","components/HOC/StudentLayout.js","components/Student/StudentComponent.js","components/HOC/DefaultLayout.js","components/Login.js","components/Signup.js","components/Teacher/TeacherSettings.js","components/routes.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","withRouter","props","useEffect","ref","orderByChild","equalTo","auth","currentUser","uid","on","data","val","type","console","log","history","push","className","to","children","TeacherComponent","useState","name","surname","photo","teacher","setTeacher","user","src","onClick","signOut","Student","student","setStudent","DefaultLayout","Login","email","password","setUser","error","setError","id","value","onChange","e","target","signInWithEmailAndPassword","then","r","catch","message","Signup","createUserWithEmailAndPassword","res","temp","TeacherSettings","status","setStatus","style","setStyle","progress","setProgress","setPhoto","uploadSuccess","filename","a","storage","child","getDownloadURL","downloadURL","key","set","progressStyle","width","accept","randomizeFilename","storageRef","onUploadStart","onUploadSuccess","onProgress","perc","uploadProgress","PrivateRoute","path","component","Routes","App","Boolean","window","location","hostname","match","onAuthStateChanged","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.0cfe3adf.chunk.js","sourcesContent":["import * as firebase from 'firebase'\r\n\r\n\r\n // Your web app's Firebase configuration\r\n var firebaseConfig = {\r\n  apiKey: \"AIzaSyD8U4Ma9TkYobhVJRB02irqXMw6r4AwxFE\",\r\n  authDomain: \"gago-cb44b.firebaseapp.com\",\r\n  databaseURL: \"https://gago-cb44b.firebaseio.com\",\r\n  projectId: \"gago-cb44b\",\r\n  storageBucket: \"gago-cb44b.appspot.com\",\r\n  messagingSenderId: \"102445019710\",\r\n  appId: \"1:102445019710:web:2210d14071a152e851576f\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n  const db = firebase.database();\r\n  export {\r\n    firebase,\r\n    db\r\n  }","import React, {useState, useEffect} from 'react';\r\nimport {BrowserRouter, Link, Route, Switch, withRouter} from 'react-router-dom'\r\nimport {db,firebase} from '../../firebase'\r\n  \r\n  function TeacherLayout(props){\r\n\tuseEffect(()=>{\r\n\t\tdb.ref(\"users\").orderByChild(\"id\").equalTo(firebase.auth().currentUser.uid).on(\"child_added\",(data)=>{\r\n\t\t\tif(data.val().type != 0){\r\n\t\t\t\tconsole.log(props)\r\n\t\t\t\tprops.history.push(\"/\")\r\n\t\t\t}\r\n\t\t  })\r\n\t},[])\r\n  \t\r\n  \treturn (\r\n  \t\t<div>\r\n\t  \t\t<nav className=\"navbar navbar-expand-sm bg-dark\">\r\n\r\n\t\t\t\t  <ul className=\"navbar-nav\">\r\n\t\t\t\t  <li className=\"nav-item\">\r\n\t\t\t\t      <Link className=\"nav-link text-white\" to=\"/teacher\">Profile</Link>\r\n\t\t\t\t    </li>\r\n\t\t\t\t    <li className=\"nav-item\">\r\n\t\t\t\t      <Link className=\"nav-link text-white\" to=\"/addTest\">Add Test</Link>\r\n\t\t\t\t    </li>\r\n\t\t\t\t     <li className=\"nav-item\">\r\n\t\t\t\t      <Link className=\"nav-link text-white\" to=\"/mytests\">My Tests</Link>\r\n\t\t\t\t    </li>\r\n\t\t\t\t  \r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Link className=\"nav-link text-white\" to=\"/settings\">Settings</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t      <Link className=\"nav-link text-white\" to=\"/\">Logout</Link>\r\n\t\t\t\t    </li>\t\t\t\t    \r\n\t\t\t\t  </ul>\r\n\r\n\t\t\t\t</nav>\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t{props.children}\r\n\t\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n  }\r\n\r\n  export default withRouter(TeacherLayout)","import React, {useState, useEffect} from 'react';\r\nimport {firebase,db} from '../../firebase'\r\nimport TeacherLayout from '../HOC/TeacherLayout'\r\nimport '../../App.css'\r\n\r\n\r\n\r\n  function TeacherComponent(props){\r\n    const [teacher, setTeacher] = useState({name:\"\", surname:\"\",photo:\"\"})\r\n\r\n    useEffect(()=>{\r\n      db.ref(\"users\").orderByChild(\"id\").equalTo(props.user.uid).on(\"child_added\",(data)=>{\r\n        console.log(data.val())\r\n        setTeacher({...data.val()})\r\n      })    },[])\r\n\r\n\r\n      console.log(teacher.photo)\r\n      \r\n  \t\r\n  \treturn (\r\n      <TeacherLayout>\r\n        {\r\n          teacher.photo? <img src={teacher.photo}/> : <img className=\"profile-pic\" src=\"https://i.pinimg.com/originals/12/95/85/1295853ea2e3724a42ef18d4b54d9e44.png\"/>  \r\n        }\r\n        <h1>{teacher.name} {teacher.surname} </h1>\r\n        <p className=\"text-danger\">Teacher of Programming!</p>\r\n      </TeacherLayout>\r\n    )\r\n\r\n      \t\r\n  }\r\n\r\n  export default TeacherComponent","import React, {useState, useEffect} from 'react';\r\nimport {BrowserRouter, Link, withRouter, Route, Switch} from 'react-router-dom'\r\nimport {db,firebase} from '../../firebase'\r\n  \r\n  function StudentLayout(props){\r\n\r\n\tuseEffect(()=>{\r\n\t\tdb.ref(\"users\").orderByChild(\"id\").equalTo(firebase.auth().currentUser.uid).on(\"child_added\",(data)=>{\r\n\t\t\tif(data.val().type != 1){\r\n\t\t\t\tconsole.log(props)\r\n\t\t\t\tprops.history.push(\"/\")\r\n\t\t\t}\r\n\t\t  })\r\n\t},[])\r\n\r\n  \treturn (\r\n  \t\t<div>\r\n\t  \t\t<nav className=\"navbar navbar-expand-sm bg-dark\">\r\n\r\n\t\t\t\t  <ul className=\"navbar-nav\">\r\n\t\t\t\t  <li className=\"nav-item\">\r\n\t\t\t\t      <Link className=\"nav-link text-white\" to=\"/student\">Profile</Link>\r\n\t\t\t\t    </li>\r\n\t\t\t\t    <li className=\"nav-item\">\r\n\t\t\t\t      <Link className=\"nav-link text-white\" to=\"/list\">Test List</Link>\r\n\t\t\t\t    </li>\r\n\t\t\t\t     <li className=\"nav-item\">\r\n\t\t\t\t      <Link className=\"nav-link text-white\" to=\"/results\">My Results</Link>\r\n\t\t\t\t    </li>\r\n\t\t\t\t    <li className=\"nav-item\">\r\n\t\t\t\t      <a className=\"nav-link text-white\" onClick={()=>firebase.auth().signOut()} >Logout</a>\r\n\t\t\t\t    </li>\r\n\t\t\t\t    \r\n\t\t\t\t  </ul>\r\n\r\n\t\t\t\t</nav>\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t{props.children}\r\n\t\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n  }\r\n\r\n  export default withRouter(StudentLayout)","import React, {useState, useEffect} from 'react';\r\nimport {firebase,db} from '../../firebase'\r\nimport StudentLayout from '../HOC/StudentLayout'\r\nimport '../../App.css'\r\n\r\n\r\n\r\n  function Student(props){\r\n    const [student, setStudent] = useState({name:\"\", surname:\"\"})\r\n\r\n    useEffect(()=>{\r\n      console.log(props.user)\r\n      console.log(firebase.auth().currentUser)\r\n      db.ref(\"users\").orderByChild(\"id\").equalTo(props.user.uid).on(\"child_added\",(data)=>{\r\n        console.log(data.val())\r\n        setStudent({...data.val()})\r\n      })\r\n    },[])\r\n   \r\n  \t\r\n  \treturn (\r\n      <StudentLayout>\r\n        <img className=\"profile-pic\" src=\"https://toppng.com/uploads/thumbnail//cool-avatar-transparent-image-cool-boy-avatar-11562893383wqfzf3peop.png\"/>  \r\n        <h1>{student.name} {student.surname} </h1>\r\n        <p className=\"text-danger\">Student of Programming!</p>\r\n      </StudentLayout>\r\n    )\r\n\r\n      \t\r\n  }\r\n\r\n  export default Student","import React, {useState, useEffect} from 'react';\r\nimport {BrowserRouter, Link, Route, Switch} from 'react-router-dom'\r\nimport '../../styles/home.css'\r\n  \r\n  function DefaultLayout(props){\r\n  \treturn (\r\n  \t\t<div>\r\n\t  \t\t<nav className=\"navbar navbar-expand-sm bg-dark\">\r\n\r\n\t\t\t\t  <ul className=\"navbar-nav\">\r\n\t\t\t\t    <li className=\"nav-item\">\r\n\t\t\t\t      <Link className=\"nav-link text-white\" to=\"/\">Login</Link>\r\n\t\t\t\t    </li>\r\n\t\t\t\t    <li className=\"nav-item\">\r\n\t\t\t\t      <Link className=\"nav-link text-white\" to=\"/signup\">Signup</Link>\r\n\t\t\t\t    </li>\r\n\t\t\t\t    \r\n\t\t\t\t  </ul>\r\n\r\n\t\t\t</nav>\r\n\t\t\t<div className=\"container-fluid bg-cover\">\r\n\t\t\t\t\r\n\t\t\t\t\t{props.children}\r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n  }\r\n\r\n  export default DefaultLayout","import React, {useState, useEffect} from 'react';\r\nimport DefaultLayout from './HOC/DefaultLayout'\r\nimport {firebase,db} from '../firebase'\r\n  \r\n  function Login(props){\r\n  \tconst [user, setUser] = useState({ email:\"Armen.Marjinyan@gmail.com\", password:\"111111\"})\r\n\tconst [error, setError] = useState(\"\")\r\n\t\r\n\t\r\n  \r\n\tconst userLogin = () => {\r\n\t\tfirebase.auth().signInWithEmailAndPassword(user.email,user.password)\r\n\t\t.then((r)=>{\r\n\t\t\tconsole.log(r.uid);\r\n\t\t\tdb.ref(\"users\").orderByChild(\"id\").equalTo(r.uid).on(\"child_added\",(data)=>{\r\n\t\t\t\tif(data.val().type == 1){\r\n\t\t\t\t\tprops.history.push(\"/student\");\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tprops.history.push(\"/teacher\")\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})\r\n\t\t.catch((r)=>{\r\n\t\t\tsetError(r.message);\r\n\t\t})\r\n\t}\r\n\r\n  \treturn (\r\n\t\t\r\n\r\n  \t\t<DefaultLayout>\r\n        <div id=\"signup-login-wrapper\">\r\n      \t\t\t<h1> <span className=\"text-warning p-2\">#TestLovers</span></h1>\r\n      \t\t\t<div  >\r\n      \t\t\t\t<div >\r\n      \t\t\t\t\t<h3>Please Login</h3>\t\r\n      \t\t\t\t\t<p className=\"text-danger\">{error}</p>\r\n      \t\t\t\t\t<div className=\"form-group\">\r\n      \t\t\t\t\t\t<label>Login</label>\r\n      \t\t\t\t\t\t<input type=\"text\"\r\n      \t\t\t\t\t\t \t   className=\"form-control\"\r\n      \t\t\t\t\t\t \t   value={user.email}\r\n      \t\t\t\t\t\t \t   onChange={(e) => setUser({...user, email:e.target.value})}\r\n      \t\t\t\t\t\t />\r\n      \t\t\t\t\t</div>\r\n      \t\t\t\t\t<div className=\"form-group\">\r\n      \t\t\t\t\t\t<label>password</label>\r\n      \t\t\t\t\t\t<input type=\"text\"\r\n      \t\t\t\t\t\t \t   className=\"form-control\"\r\n      \t\t\t\t\t\t \t   value={user.password}\r\n      \t\t\t\t\t\t \t   onChange={(e) => setUser({...user, password:e.target.value})}\r\n      \t\t\t\t\t\t />\r\n      \t\t\t\t\t</div>\r\n      \t\t\t\t\t\r\n      \t\t\t\t\t<div className=\"form-group\">\r\n      \t\t\t\t\t\t<button  className=\"btn btn-warning\" onClick={()=>userLogin()}>Login </button>\r\n      \t\t\t\t\t</div>\r\n      \t\t\t\t</div>\r\n      \t\t\t</div>\r\n            <p >PROFit Training Center - #React Professional</p>\r\n          </div>\r\n  \t\t</DefaultLayout>\r\n\t)\r\n  }\r\n\r\n  export default Login","import React, {useState, useEffect} from 'react';\r\nimport DefaultLayout from './HOC/DefaultLayout'\r\nimport {firebase,db} from '../firebase'\r\n\r\n  \r\n  function Signup(props){\r\n    const [user, setUser] = useState({name:\"\", surname:\"\", email:\"\", password:\"\", type:0})\r\n\t  const [error, setError] = useState(\"\")\r\n\t  \r\n\t  const signUp = () => {\r\n\t\t  console.log(user.password)\r\n\t\t  firebase.auth()\r\n\t\t\t\t\t.createUserWithEmailAndPassword(user.email,user.password)\r\n\t\t\t\t\t.then((res)=>{\r\n\t\t\t\t\t\tlet temp = {...user};\r\n\t\t\t\t\t\tdelete temp.password\r\n\t\t\t\t\t\tdb.ref(\"users\").push({id:res.uid,...temp})\r\n\t\t\t\t\t\t.then(()=>{\r\n\t\t\t\t\t\t\tprops.history.push(\"/login\")\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\tconsole.log(res.uid);\r\n\t\t\t\t\t\tsetError(\"\");\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch((res)=>{\r\n\t\t\t\t\t\tsetError(res.message);\r\n\t\t\t\t\t})\r\n\t\t}\r\n\r\n  \t\r\n  \treturn (\r\n\r\n  \t\t<DefaultLayout>\r\n  \t\t\t<div  id=\"signup-login-wrapper\">\r\n       \t\t\t <h1> <span className=\"text-warning p-2\">#TestLovers</span></h1>\r\n  \t\t\t\t<div >\r\n  \t\t\t\t\t<h3>Please Signup</h3>\t\r\n            \t\t<p className=\"text-danger\">{error}</p>\r\n\r\n  \t\t\t\t\t<div className=\"form-group\">\r\n  \t\t\t\t\t\t<label>Login</label>\r\n  \t\t\t\t\t\t<input type=\"text\"\r\n  \t\t\t\t\t\t \t   className=\"form-control\"\r\n  \t\t\t\t\t\t \t   value={user.email}\r\n  \t\t\t\t\t\t \t   onChange={(e) => setUser({...user, email:e.target.value})}\r\n  \t\t\t\t\t\t />\r\n  \t\t\t\t\t</div>\r\n  \t\t\t\t\t<div className=\"form-group\">\r\n  \t\t\t\t\t\t<label>password</label>\r\n  \t\t\t\t\t\t<input type=\"text\"\r\n  \t\t\t\t\t\t \t   className=\"form-control\"\r\n  \t\t\t\t\t\t \t   value={user.password}\r\n  \t\t\t\t\t\t \t   onChange={(e) => setUser({...user, password:e.target.value})}\r\n  \t\t\t\t\t\t />\r\n  \t\t\t\t\t</div>\r\n  \t\t\t\t\t<div className=\"form-group\">\r\n  \t\t\t\t\t\t<label>Name</label>\r\n  \t\t\t\t\t\t<input type=\"text\"\r\n  \t\t\t\t\t\t \t   className=\"form-control\"\r\n  \t\t\t\t\t\t \t   value={user.name}\r\n  \t\t\t\t\t\t \t   onChange={(e) => setUser({...user, name:e.target.value})}\r\n  \t\t\t\t\t\t />\r\n  \t\t\t\t\t</div>\r\n  \t\t\t\t\t<div className=\"form-group\">\r\n  \t\t\t\t\t\t<label>Surname</label>\r\n  \t\t\t\t\t\t<input type=\"text\"\r\n  \t\t\t\t\t\t \t   className=\"form-control\"\r\n  \t\t\t\t\t\t \t   value={user.surname}\r\n  \t\t\t\t\t\t \t   onChange={(e) => setUser({...user, surname:e.target.value})}\r\n  \t\t\t\t\t\t />\r\n  \t\t\t\t\t</div>\r\n  \t\t\t\t\t<div className=\"form-group\">\r\n  \t\t\t\t\t\t<label>Type</label>\r\n  \t\t\t\t\t\t<select className=\"form-control\"\r\n\t\t  \t\t\t\t\t\tvalue={user.type}\r\n\t\t  \t\t\t\t\t\tonChange={(e) => setUser({...user, type:e.target.value})}\r\n  \t\t\t\t\t\t>\r\n  \t\t\t\t\t\t\t<option value=\"0\">Teacher</option>\r\n  \t\t\t\t\t\t\t<option value=\"1\">Student</option>\r\n  \t\t\t\t\t\t</select>\r\n  \t\t\t\t\t</div>\r\n  \t\t\t\t\t<div className=\"form-group\">\r\n  \t\t\t\t\t\t<button  className=\"btn btn-success\" onClick={()=>signUp()}>Sign up </button>\r\n  \t\t\t\t\t</div>\r\n  \t\t\t\t</div>\r\n\r\n  \t\t\t</div>\r\n  \t\t</DefaultLayout>\r\n\t)\r\n  }\r\n\r\n  export default Signup","import React, {useState,useEffect} from 'react'\r\nimport {firebase,db} from '../../firebase'\r\nimport TeacherLayout from '../HOC/TeacherLayout'\r\nimport FileUploader from \"react-firebase-file-uploader\";\r\n\r\nimport '../../App.css'\r\nconst TeacherSettings = () => {\r\n    const [status,setStatus] = useState(\"\")\r\n    const [style,setStyle] = useState(\"text-warning\")\r\n    const [progress, setProgress] = useState(0)\r\n    const [photo, setPhoto] = useState(\"\")\r\n\r\n    const uploadStart = ()=>{\r\n        setStatus(\"started...\")\r\n\r\n    }\r\n    const uploadSuccess = async filename => {\r\n        setStatus(\"Upload finished...\");\r\n        setStyle(\"text-success\")\r\n\r\n        const downloadURL = await firebase\r\n                                .storage()\r\n                                .ref(\"images\")\r\n                                .child(filename)\r\n                                .getDownloadURL();\r\n        setPhoto(downloadURL)\r\n\r\n        db.ref(\"users\").orderByChild(\"id\").equalTo(firebase.auth().currentUser.uid).on(\"child_added\",(data)=>{\r\n            console.log(data.key)\r\n            db.ref(\"users/\"+data.key + \"/photo\").set(downloadURL);//esi ampyaman tun@ nayi\r\n\t\t  })\r\n\r\n    }\r\n\r\n    const uploadProgress = perc => {\r\n       setProgress(perc);\r\n    }\r\n\r\n    const progressStyle = {\r\n        width : progress + \"%\"\r\n    }\r\n    return (\r\n        <TeacherLayout>\r\n            <h1>Upload a picture</h1>\r\n            <h4 className={style}>{status}</h4>\r\n            <img src={photo} />\r\n            <div className=\"progress\">\r\n                <div className=\" progress-bar progress-bar-striped\" style={progressStyle}>{progress}</div>\r\n                        </div>\r\n                        <FileUploader\r\n                                accept=\"image/*\"\r\n                                name=\"avatar\"\r\n                                randomizeFilename\r\n                                storageRef={firebase.storage().ref(\"images\")}\r\n                                onUploadStart={()=>uploadStart()}\r\n                            // onUploadError={this.handleUploadError}\r\n                                onUploadSuccess={(filename) => uploadSuccess(filename)}\r\n                                onProgress={(perc) => uploadProgress(perc)}\r\n                          />\r\n        </TeacherLayout>\r\n    )\r\n}\r\n\r\nexport default TeacherSettings\r\n","import React, {useState, useEffect} from 'react';\r\nimport {BrowserRouter, Link, Route, Switch, Redirect} from 'react-router-dom'\r\nimport Teacher from './Teacher/TeacherComponent'\r\nimport Student from './Student/StudentComponent'\r\nimport Login from './Login'\r\nimport Signup from './Signup'\r\nimport {firebase} from '../firebase'\r\nimport TeacherSettings from './Teacher/TeacherSettings';\r\n\r\nconst PrivateRoute = (props)=>{\r\n\tlet user = firebase.auth().currentUser;\r\n\tif(user){\r\n\t\treturn <Route path={props.path} component={props.component} />\r\n\t}\r\n\treturn <Redirect to=\"/\" />\r\n}\r\n\r\nconst Routes = (props) => {\r\n\r\n\t\r\n\r\n\r\n\treturn (\r\n\t\t<BrowserRouter>\r\n\t\t\t<Switch>\r\n\t\t\t\t<PrivateRoute  path=\"/student\" component={()=><Student {...props} />} />\r\n\t\t\t\t<PrivateRoute  path=\"/teacher\" component={()=><Teacher {...props}/>} />\r\n\t\t\t\t<PrivateRoute path=\"/settings\" component={()=><TeacherSettings {...props}/>}/>\r\n\t\t\t\t<Route path=\"/signup\" component={Signup} />\r\n\t\t\t\t<Route path=\"/\" component={Login} />\r\n\r\n\t\t\t</Switch>\r\n\t\t</BrowserRouter>\r\n\t)\r\n}\r\n\r\nexport default Routes;","import React, {useState, useEffect} from 'react';\nimport logo from './logo.svg';\nimport {db} from './firebase'\nimport Routes from './components/routes'\nimport './App.css';\n\nfunction App(props) {\n\n  \n  return (\n  \n       <Routes {...props} />\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {firebase} from './firebase'\n\n\nfirebase.auth().onAuthStateChanged((user)=>{\n\tconsole.log(\"AUTH------------\", user);\n\tReactDOM.render(\n\t    <App user={user} />, document.getElementById('root')\n\t);\n\n})\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}